package io.searchbox.indices.mapping;

/*Generated by MPS */

import io.searchbox.action.GenericResultAbstractAction;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import io.searchbox.action.AbstractAction;

public class PutMapping extends GenericResultAbstractAction {

  protected PutMapping(PutMapping.Builder builder) {
    super(builder);
    this.indexName = builder.index;
    this.typeName = builder.type;
    this.payload = builder.source;
    setURI(buildURI());
  }
  @Override
  protected String buildURI() {
    return super.buildURI() + "/_mapping";
  }
  @Override
  public String getRestMethodName() {
    return "PUT";
  }
  @Override
  public int hashCode() {
    return new HashCodeBuilder().appendSuper(super.hashCode()).toHashCode();
  }
  @Override
  public boolean equals(Object obj) {
    if (obj == null) {
      return false;
    }
    if (obj == this) {
      return true;
    }
    if (obj.getClass() != getClass()) {
      return false;
    }
    return new EqualsBuilder().appendSuper(super.equals(obj)).isEquals();
  }
  public static class Builder extends AbstractAction.Builder<PutMapping, PutMapping.Builder> {
    private String index;
    private String type;
    private Object source;
    public Builder(String index, String type, Object source) {
      this.index = index;
      this.type = type;
      this.source = source;
    }
    @Override
    public PutMapping build() {
      return new PutMapping(this);
    }
  }
}
