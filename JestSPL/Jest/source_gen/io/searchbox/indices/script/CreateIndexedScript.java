package io.searchbox.indices.script;

/*Generated by MPS */

import com.google.gson.JsonElement;
import java.io.File;
import java.io.IOException;
import java.nio.charset.Charset;
import io.searchbox.action.AbstractAction;
import java.io.FileInputStream;
import java.io.InputStream;
import com.google.common.io.CharStreams;
import java.io.InputStreamReader;
import com.google.gson.JsonObject;

public class CreateIndexedScript extends AbstractIndexedScript {

  protected CreateIndexedScript(CreateIndexedScript.Builder builder) {
    super(builder);
    this.payload = builder.payload;
    setURI(buildURI());
  }
  @Override
  public String getRestMethodName() {
    return "POST";
  }
  public String getScriptName() {
    return scriptName;
  }
  public ScriptLanguage getScriptLanguage() {
    return scriptLanguage;
  }
  public static class Builder extends AbstractIndexedScript.Builder<CreateIndexedScript, CreateIndexedScript.Builder> {
    private JsonElement payload;
    public Builder(String scriptName) {
      super(scriptName);
    }
    @Override
    public CreateIndexedScript build() {
      return new CreateIndexedScript(this);
    }
    public CreateIndexedScript.Builder setSource(String source) {
      createPayload(source);
      return this;
    }
    public CreateIndexedScript.Builder loadSource(File srcFile) throws IOException {
      return loadSource(srcFile, Charset.forName(AbstractAction.CHARSET));
    }
    public CreateIndexedScript.Builder loadSource(File srcFile, Charset encoding) throws IOException {
      return loadSource(new FileInputStream(srcFile), encoding);
    }
    public CreateIndexedScript.Builder loadSource(InputStream srcStream) throws IOException {
      return loadSource(srcStream, Charset.forName(AbstractAction.CHARSET));
    }
    public CreateIndexedScript.Builder loadSource(InputStream srcStream, Charset encoding) throws IOException {
      String src = CharStreams.toString(new InputStreamReader(srcStream, encoding));
      createPayload(src);
      return this;
    }
    private void createPayload(String source) {
      JsonObject jsonObject = new JsonObject();
      jsonObject.addProperty("script", source);
      payload = jsonObject;
    }
  }
}
