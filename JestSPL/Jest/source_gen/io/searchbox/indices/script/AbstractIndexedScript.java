package io.searchbox.indices.script;

/*Generated by MPS */

import io.searchbox.action.GenericResultAbstractAction;
import java.net.URLEncoder;
import io.searchbox.action.AbstractAction;
import java.io.UnsupportedEncodingException;

public abstract class AbstractIndexedScript extends GenericResultAbstractAction {

  protected String scriptName;
  protected ScriptLanguage scriptLanguage;
  protected AbstractIndexedScript(AbstractIndexedScript.Builder builder) {
    super(builder);
    this.scriptName = builder.scriptName;
    this.scriptLanguage = builder.scriptLanguage;
  }
  protected String buildURI() {
    String finalUri = super.buildURI() + "/_scripts/" + scriptLanguage.pathParameterName + "/";
    try {
      finalUri += URLEncoder.encode(scriptName, AbstractAction.CHARSET);
    } catch (UnsupportedEncodingException e) {
      // unless CHARSET is overridden with a wrong value in a subclass, 
      // this exception won't be thrown. 
      AbstractAction.log.error("Error occurred while adding parameters to uri.", e);
    }
    return finalUri;
  }
  public String getScriptName() {
    return scriptName;
  }
  public ScriptLanguage getScriptLanguage() {
    return scriptLanguage;
  }
  @SuppressWarnings(value = "unchecked")
  public static abstract class Builder<T extends AbstractIndexedScript, K> extends AbstractAction.Builder<T, K> {
    private String scriptName;
    private ScriptLanguage scriptLanguage = ScriptLanguage.GROOVY;
    public Builder(String scriptName) {
      this.scriptName = scriptName;
    }
    public K setLanguage(ScriptLanguage scriptLanguage) {
      this.scriptLanguage = scriptLanguage;
      return (K) this;
    }
  }
}
