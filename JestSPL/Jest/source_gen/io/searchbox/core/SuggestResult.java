package io.searchbox.core;

/*Generated by MPS */

import io.searchbox.client.JestResult;
import com.google.gson.Gson;
import java.util.List;
import java.util.ArrayList;
import com.google.gson.JsonElement;
import java.util.Map;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.EqualsBuilder;

public class SuggestResult extends JestResult {

  public SuggestResult(SuggestResult suggestResult) {
    super(suggestResult);
  }
  public SuggestResult(Gson gson) {
    super(gson);
  }
  public List<SuggestResult.Suggestion> getSuggestions(String suggestionName) {
    List<SuggestResult.Suggestion> suggestions = new ArrayList<SuggestResult.Suggestion>();
    if (jsonObject != null && jsonObject.has(suggestionName)) {
      for (JsonElement suggestionElement : jsonObject.getAsJsonArray(suggestionName)) {
        suggestions.add(gson.fromJson(suggestionElement, SuggestResult.Suggestion.class));
      }
    }
    return suggestions;
  }
  public class Suggestion {
    public final String text;
    public final Integer offset;
    public final Integer length;
    public final List<Map<String, Object>> options;
    public Suggestion(String text, Integer offset, Integer length, List<Map<String, Object>> options) {
      this.text = text;
      this.offset = offset;
      this.length = length;
      this.options = options;
    }
    @Override
    public int hashCode() {
      return new HashCodeBuilder().append(text).append(offset).append(length).append(options).toHashCode();
    }
    @Override
    public boolean equals(Object obj) {
      if (obj == null) {
        return false;
      }
      if (obj == this) {
        return true;
      }
      if (obj.getClass() != getClass()) {
        return false;
      }
      SuggestResult.Suggestion rhs = (SuggestResult.Suggestion) obj;
      return new EqualsBuilder().append(text, rhs.text).append(offset, rhs.offset).append(length, rhs.length).append(options, rhs.options).isEquals();
    }
  }
}
