package io.searchbox.core;

/*Generated by MPS */

import io.searchbox.action.AbstractAction;
import com.google.gson.Gson;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.EqualsBuilder;
import io.searchbox.action.AbstractMultiTypeActionBuilder;

public class Count extends AbstractAction<CountResult> {

  protected Count(Count.Builder builder) {
    super(builder);
    this.payload = builder.query;
    setURI(buildURI());
  }
  @Override
  protected String buildURI() {
    return super.buildURI() + "/_count";
  }
  @Override
  public String getPathToResult() {
    return "count";
  }
  @Override
  public CountResult createNewElasticSearchResult(String responseBody, int statusCode, String reasonPhrase, Gson gson) {
    return createNewElasticSearchResult(new CountResult(gson), responseBody, statusCode, reasonPhrase, gson);
  }
  @Override
  public String getRestMethodName() {
    return "POST";
  }
  @Override
  public int hashCode() {
    return new HashCodeBuilder().appendSuper(super.hashCode()).toHashCode();
  }
  @Override
  public boolean equals(Object obj) {
    if (obj == null) {
      return false;
    }
    if (obj == this) {
      return true;
    }
    if (obj.getClass() != getClass()) {
      return false;
    }
    return new EqualsBuilder().appendSuper(super.equals(obj)).isEquals();
  }
  public static class Builder extends AbstractMultiTypeActionBuilder<Count, Count.Builder> {
    private String query;
    public Count.Builder query(String query) {
      this.query = query;
      return this;
    }
    @Override
    public Count build() {
      return new Count(this);
    }
  }
}
