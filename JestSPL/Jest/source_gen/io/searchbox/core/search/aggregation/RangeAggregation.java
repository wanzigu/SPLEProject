package io.searchbox.core.search.aggregation;

/*Generated by MPS */

import java.util.List;
import com.google.gson.JsonObject;
import java.util.ArrayList;
import com.google.gson.JsonElement;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;

public class RangeAggregation extends BucketAggregation {

  public static final String TYPE = "range";
  private List<Range> ranges;
  public RangeAggregation(String name, JsonObject rangeAggregation) {
    super(name, rangeAggregation);
    ranges = new ArrayList<Range>();
    // todo support keyed:true as well 
    for (JsonElement bucketElement : rangeAggregation.get(String.valueOf(AggregationField.BUCKETS)).getAsJsonArray()) {
      JsonObject bucket = bucketElement.getAsJsonObject();
      Range range = new Range(bucket, (bucket.has(String.valueOf(AggregationField.FROM)) ? bucket.get(String.valueOf(AggregationField.FROM)).getAsDouble() : null), (bucket.has(String.valueOf(AggregationField.TO)) ? bucket.get(String.valueOf(AggregationField.TO)).getAsDouble() : null), bucket.get(String.valueOf(AggregationField.DOC_COUNT)).getAsLong());
      ranges.add(range);
    }
  }
  public List<Range> getBuckets() {
    return ranges;
  }
  public String getName() {
    return name;
  }
  @Override
  public boolean equals(Object obj) {
    if (obj == null) {
      return false;
    }
    if (obj == this) {
      return true;
    }
    if (obj.getClass() != getClass()) {
      return false;
    }
    RangeAggregation rhs = (RangeAggregation) obj;
    return new EqualsBuilder().appendSuper(super.equals(obj)).append(ranges, rhs.ranges).isEquals();
  }
  @Override
  public int hashCode() {
    return new HashCodeBuilder().appendSuper(super.hashCode()).append(ranges).toHashCode();
  }
}
